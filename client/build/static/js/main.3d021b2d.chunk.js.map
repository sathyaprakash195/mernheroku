{"version":3,"sources":["components/Dashboard.js","components/Login.js","components/Navbar.js","components/Register.js","components/Userslist.js","components/Update.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","props","history","useHistory","token","localStorage","getItem","useState","email","setemail","useEffect","decoded","decode","name","push","Login","show","setShow","password","setpassword","className","type","placeholder","value","onChange","e","target","onClick","user","axios","post","then","res","data","setItem","alert","Modal","onHide","Header","closebutton","Title","Body","Footer","window","location","reload","Navbar","logout","removeItem","style","display","to","Register","setname","username","setusername","Userslist","items","setitems","getusers","get","console","log","map","item","isVerified","_id","id","Update","proos","match","params","App","Fragment","path","component","exact","Component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3d021b2d.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport decode from 'jwt-decode';\r\n\r\nimport { Route, withRouter, Redirect, useHistory, Router,BrowserRouterasRouter } from 'react-router-dom';\r\n\r\nfunction Dashboard(props) {\r\n    \r\n    \r\n    const history=useHistory();\r\n    const token=localStorage.getItem('loggedin');\r\n    const[email,setemail]=useState();\r\n\r\n  \r\n    useEffect(()=>{\r\n      \r\n        if(localStorage.getItem('loggedin'))\r\n        {\r\n            const decoded=decode(token);\r\n            setemail(decoded.name);\r\n        }\r\n        else{\r\n            history.push('/login');\r\n        }\r\n    })\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>Hii ,{email}</h1>\r\n            <h1>Welcome To MernCrud</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React, { Component, useState } from 'react';\r\nimport { Route, withRouter, Redirect, useHistory, Router, } from 'react-router-dom';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport axios from 'axios';\r\nimport Dashboard from './Dashboard';\r\nimport Navbar from './Navbar';\r\nconst Login = () => {\r\n\r\n    const history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [email, setemail] = useState('');\r\n    const [password, setpassword] = useState('');\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    function loginuser() {\r\n        var user = {\r\n\r\n            email: email,\r\n            password: password\r\n\r\n        }\r\n\r\n        axios.post('/api/user/loginuser', user).then(\r\n            res => {\r\n                if (res.data.token) {\r\n                    handleShow();\r\n                    localStorage.setItem('loggedin', res.data.token);\r\n                }\r\n                else if (res.data == '1') {\r\n                    alert('email verification is pending');\r\n                }\r\n                else {\r\n                    alert('Invalid username or password');\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n    function proceed () {\r\n        history.push('/dashboard');\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n\r\n            <div className='col-md-4'>\r\n                <h1>Login Page</h1>\r\n\r\n                <div className=\"m-2 p-2\">\r\n\r\n\r\n\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        placeholder=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => { setemail(e.target.value) }}\r\n                    />\r\n\r\n                    <input type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        placeholder=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => { setpassword(e.target.value) }}\r\n                    />\r\n\r\n                    <button onClick={loginuser} className='btn btn-primary'>Login</button>\r\n                </div>\r\n\r\n               \r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closebutton>\r\n                    <Modal.Title>Congratulations</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Login Successfull</Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-primary\" onClick={proceed}>\r\n                        Ok\r\n                   </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Login;","import React,{ Component, useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Link, Route,useHistory } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport App from './../App';\r\nfunction Navbar() {\r\n\r\n    const history=useHistory();\r\n    \r\n\r\n\r\n    function logout() {\r\n        localStorage.removeItem('loggedin');\r\n        history.push('/');\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <nav>\r\n\r\n                {(() => {\r\n\r\n                    if (!localStorage.getItem('loggedin')) {\r\n                        return (\r\n                            <div style={{ display: \"inline\" }}>\r\n                                <Link to='/login'>\r\n                                    <li className=\"btn btn-primary\">Login</li>\r\n                                </Link>\r\n                                <Link to='/register'>\r\n                                    <li className=\"btn btn-primary\">Register</li>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        );\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div style={{ display: \"inline\" }}>\r\n                                <Link to='/dashboard'>\r\n                                    <li className=\"btn btn-primary\">Dashboard</li>\r\n                                </Link>\r\n                                <Link to='/userslist'>\r\n                                    <li className=\"btn btn-primary\">Userslist</li>\r\n                                </Link>\r\n                                <li className=\"btn btn-primary\" onClick={logout}>LogOut</li>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n\r\n                })()}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <hr />\r\n\r\n\r\n\r\n            </nav>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { Component, useState } from 'react';\r\nimport axios from 'axios';\r\nconst Register = () => {\r\n\r\n    const [name, setname] = useState('');\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [email, setemail] = useState('');\r\n\r\n\r\n    function registeruser() {\r\n        var user = {\r\n            name: name,\r\n            username: username,\r\n            email: email,\r\n            password: password\r\n\r\n        }\r\n\r\n        axios.post('/api/user/registeruser', user).then(\r\n            res => {\r\n                alert(res.data);\r\n                setname('');\r\n                setusername('');\r\n                setpassword('');\r\n                setemail('');\r\n                \r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            \r\n            <div className='col-md-4'>\r\n                <h1>Register Page</h1>\r\n                \r\n                <div className=\"m-2 p-2\">\r\n\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"name\"\r\n                        placeholder=\"name\"\r\n                        value={name}\r\n                        onChange={(e) => { setname(e.target.value) }}\r\n                    />\r\n\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"username\"\r\n                        placeholder=\"username\"\r\n                        value={username}\r\n                        onChange={(e) => { setusername(e.target.value) }}\r\n                    />\r\n\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        placeholder=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => { setemail(e.target.value) }}\r\n                    />\r\n\r\n                    <input type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        placeholder=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => { setpassword(e.target.value) }}\r\n                    />\r\n\r\n                    <button onClick={registeruser} className='btn btn-primary'>Register</button>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Register;","import React, { Component, useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nconst Userslist = () => {\r\n\r\n    const [items, setitems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getusers();\r\n\r\n    }, [])\r\n\r\n    function deleteuser(id) {\r\n        axios.post('/api/user/deleteuserbyid', { id: id }).then(\r\n            res => {\r\n                alert(res.data);\r\n            }\r\n        )\r\n\r\n        getusers();\r\n\r\n    }\r\n\r\n    function getusers() {\r\n        axios.get('/api/user/getusers').then(\r\n            res => {\r\n                console.log(res.data);\r\n                setitems(res.data);\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-7\">\r\n                <table className=\"table table-bordered table-responsive\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Username</th>\r\n                            <th>Email</th>\r\n                            <th>Verified</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {items.map((item) =>\r\n                            <tr>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.username}</td>\r\n                                <td>{item.email}</td>\r\n\r\n\r\n\r\n                                <td>\r\n                                    {(() => {\r\n                                        if(item.isVerified)\r\n                                            return \"Yes\";\r\n                                        else\r\n                                           return \"No\";\r\n                                        \r\n                                    })()}\r\n\r\n                                </td>\r\n\r\n                                <td>\r\n                                    <Link to={`/update/${item._id}`}>\r\n                                 \r\n                                            <button className=\"btn btn-danger\">Update</button>\r\n                                    \r\n                                    </Link>\r\n\r\n                                    <button className=\"btn btn-primary\" onClick={() => deleteuser(item._id)}>Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Userslist;","import React, { Component, useState,useEffect,browserHistory  } from 'react';\r\nimport { Route , withRouter,Redirect,useHistory,} from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nconst Update = ({match},proos) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const id=match.params.id;\r\n    const [name, setname] = useState('');\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n\r\n\r\n    useEffect(()=>{\r\n        axios.post('/api/user/getuserbyid',{id:id}).then(\r\n            res=>{\r\n\r\n               console.log(res.data);\r\n               setname(res.data.name);\r\n               setusername(res.data.username);\r\n               setpassword(res.data.password);\r\n\r\n               \r\n            }\r\n        )\r\n        \r\n    },[])\r\n\r\n   \r\n    \r\n\r\n\r\n    function Updateuser () {\r\n        var user={\r\n            id:id,\r\n            name:name,\r\n            username:username,\r\n            password:password\r\n\r\n        }\r\n\r\n        \r\n        axios.post('/api/user/updateuserbyid',user).then(\r\n            res=>{\r\n                alert(res.data);\r\n                console.log(res.data);\r\n                history.push('/userslist')\r\n            }\r\n        )\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className='col-md-4'>\r\n                <h1>Update Page</h1>\r\n\r\n                <div className=\"m-2 p-2\">\r\n\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"name\"\r\n                        placeholder=\"name\"\r\n                        value={name}\r\n                        onChange={(e) => { setname(e.target.value) }}\r\n                    />\r\n\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"username\"\r\n                        placeholder=\"username\"\r\n                        value={username}\r\n                        onChange={(e) => { setusername(e.target.value) }}\r\n                    />\r\n\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        placeholder=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => { setpassword(e.target.value) }}\r\n                    />\r\n                    \r\n                    <button onClick={Updateuser} className='btn btn-primary'>Update</button>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Update;","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Link, Route, Switch, Redirect } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Userslist from './components/Userslist';\nimport Update from './components/Update';\n\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <React.Fragment>\n      <div>\n        <Router>\n\n          <h1>MernStack Crud App</h1>\n          <hr />\n          <Navbar />\n\n          <Switch>\n            \n            <Route path=\"/\" component={Login} exact />\n            <Route path='/login' component={Login} exact />\n            <Route path=\"/register\" component={Register} exact />\n            <Route path=\"/userslist\" component={Userslist} exact />\n            <Route path=\"/update/:id\" component={Update} exact />\n            <Route path='/dashboard' component={Dashboard} exact />\n\n          </Switch>\n        </Router>\n\n\n\n\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}